
POST submit
-- parse the string into words
  -- No requirements around stripping punctuation, normalizing case, etc.
-- save to an ordered data structure keyed by timestamp (efficient retrieval of last 60 seconds)
  -- Since filtering granularity is by second, we can pre-compute and group each second's submissions into a single map
-- data to save is a map<string,int> of word to count


GET statistics
-- get all submissions in last 60 seconds
-- merge the maps together
-- return consolidated map


To run and test:
docker run -d -p 57138:80 darcher/wordcounter
curl -X POST -d "the sky is blue" http://localhost:57138/submit
curl http://localhost:57138/statistics


Future enhancements:
- Don't iterate the entire dictionary to find last 60 seconds (implement binary search)
- Clean up old submissions to keep memory usage under control

